---
import BaseLayout from "../../layouts/BaseLayout.astro";

// getStaticPaths 的主要功能是定义在构建时需要生成的所有动态路由。例如，当你有一系列博客文章、产品页面或其他需要动态生成的内容时，你可以使用这个函数来指定所有可能的路径。
export async function getStaticPaths() {
    const allPosts = await Astro.glob("../posts/*.md");
    // getStaticPaths 应返回一个数组，其中每个对象都有一个 params 属性，该属性包含生成路径所需的参数。
    // params 对象包含动态路由的参数。tag 是动态参数，用于生成不同的页面。
    // props 对象用于传递数据给页面组件。posts 是一个包含所有博客文章的数组
    return [
        { params: { tag: "astro" }, props: { posts: allPosts } },
        { params: { tag: "successes" }, props: { posts: allPosts } },
        { params: { tag: "community" }, props: { posts: allPosts } },
        { params: { tag: "blogging" }, props: { posts: allPosts } },
        { params: { tag: "setbacks" }, props: { posts: allPosts } },
        { params: { tag: "learning in public" }, props: { posts: allPosts } },
    ];
}

const { tag } = Astro.params;
const { posts } = Astro.props;
const filteredPosts = posts.filter((post) => post.frontmatter.tags?.includes(tag));
---

<BaseLayout pageTitle={tag}>
    <p>包含「{tag}」标签的文章</p>
    <ul>
        {filteredPosts.map((post) => <li><a href={post.url}>{post.frontmatter.title}</a></li>)}
      </ul>
</BaseLayout>
